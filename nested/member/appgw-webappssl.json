{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string"
    },
    "appgwName": {
      "type": "string"
    },
    "appgwSubnetName": {
      "type": "string"
    },
    "appgwSkuName": {
      "type": "string"
    },
    "appgwCapacity": {
      "type": "int"
    },
    "aseName": {
      "type": "string"
    },
    "aseDNSSuffix": {
      "type": "string"
    },
    "aseVirtualIp": {
      "type": "string"
    },
    "appPlanName": {
      "type": "string"
    },
    "appName": {
      "type": "string"
    },
    "externalAppHostname": {
      "type": "string"
    },
    "appgwPfxBase64": {
      "type": "string"
    },
    "appgwPfxPassword": {
      "type": "securestring"
    },
    "appgwPfxThumbprint": {
      "type": "string"
    },
    "aseILBCerBase64": {
      "type": "string"
    },
    "aseILBPfxThumbprint": {
      "type": "string"
    },
    "aseILBPfxBase64": {
      "type": "string"
    }
  },
  "variables": {
    "appgwPublicIp": "[concat(parameters('appgwName'), '-ip')]",
    "aseILBCertificateName": "[concat(parameters('aseILBPfxThumbprint'),'_',parameters('aseName'),'_InternalLoadBalancingASE')]",
    "backendFQDN": "[concat(parameters('appName'),'.',parameters('aseDNSSuffix'))]",

    "vnetRef": "[resourceId('Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
    "appgwSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('appgwSubnetName'))]",
    "appgwPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appgwPublicIp'))]",
    "applicationGatewayRef": "[resourceId('Microsoft.Network/applicationGateways',parameters('appgwName'))]",
    "aseRef": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('aseName'))]",
    "appPlanRef": "[resourceId('Microsoft.Web/serverFarms',parameters('appPlanName'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appgwPublicIp')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "displayName": "AppGW public IP address"
      }
    },
    {
      "name": "[parameters('appName')]",
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appPlanName'))]"
      ],
      "tags": {
        "displayName": "[concat('Web App - ', parameters('appName'))]"
      },
      "properties": {
        "name": "[parameters('appName')]",
        "serverFarmId": "[variables('appPlanRef')]"
      },
      "resources": [
        {
          "type": "Microsoft.Web/sites/hostnameBindings",
          "name": "[concat(parameters('appName'), '/', parameters('externalAppHostname'))]",
          "apiVersion": "2016-03-01",
          "tags": {
            "displayName": "[concat('Custom Domain - ', parameters('externalAppHostname'))]"
          },
          "properties": {
            "sslState": "SniEnabled",
            "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', variables('aseILBCertificateName'))).Thumbprint]"
          }
        }
      ]
    },
    {
      "apiVersion": "2017-03-01",
      "name": "[parameters('appgwName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Application Gateway"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('appgwPublicIp'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('appgwSkuName')]",
          "tier": "Standard",
          "capacity": "[parameters('appgwCapacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appgw_gatewayIpconfig",
            "properties": {
              "subnet": {
                "id": "[variables('appgwSubnetRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appgw_frontendPort_https_443",
            "properties": {
              "Port": 443
            }
          },
          {
            "name": "appgw_frontendPort_http_80",
            "properties": {
              "Port": 80
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "sslcertificate",
            "properties": {
              "data": "[parameters('appgwPfxBase64')]",
              "password": "[parameters('appgwPfxPassword')]"
            }
          }
        ],
        "authenticationCertificates": [
          {
            "name": "ase_ilb_public_sslcertificate",
            "properties": {
              "data": "[parameters('aseILBCerBase64')]"
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appgw_frontendip",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appgwPublicIPRef')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[concat(variables('backendFQDN'),'_probe_https')]",
            "properties": {
              "protocol": "Https",
              "host": "[variables('backendFQDN')]",
              "path": "/",
              "interval": 30,
              "timeout": 120,
              "unhealthyThreshold": 8
            }
          },
          {
            "name": "[concat(variables('backendFQDN'),'_probe_http')]",
            "properties": {
              "protocol": "Http",
              "host": "[variables('backendFQDN')]",
              "path": "/",
              "interval": 30,
              "timeout": 120,
              "unhealthyThreshold": 8
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "[concat(variables('backendFQDN'),'_setting_http')]",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "probe": {
                "id": "[concat(variables('applicationGatewayRef'), '/probes/', variables('backendFQDN'), '_probe_http')]"
              }
            }
          },
          {
            "name": "[concat(variables('backendFQDN'),'_setting_https')]",
            "properties": {
              "Port": 443,
              "Protocol": "Https",
              "CookieBasedAffinity": "Disabled",
              "probe": {
                "id": "[concat(variables('applicationGatewayRef'), '/probes/', variables('backendFQDN'), '_probe_https')]"
              },
              "authenticationCertificates": [
                {
                  "id": "[concat(variables('applicationGatewayRef'), '/authenticationCertificates/backend_whitelist_sslcertificate')]"
                }
              ]
            }
          }
        ],
        "httpListeners": [
          {
            "name": "[concat(parameters('externalAppHostname'),'_listener_http')]",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayRef'), '/frontendIPConfigurations/appgw_frontendip')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayRef'), '/frontendPorts/appgw_frontendPort_http_80')]"
              },
              "Protocol": "Http",
              "hostName": "[parameters('externalAppHostname')]",
              "SslCertificate": null
            }
          },
          {
            "name": "[concat(parameters('externalAppHostname'),'_listener_https')]",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayRef'), '/frontendIPConfigurations/appgw_frontendip')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayRef'), '/frontendPorts/appgw_frontendPort_https_443')]"
              },
              "Protocol": "Https",
              "hostName": "[parameters('externalAppHostname')]",
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayRef'), '/sslCertificates/sslcertificate')]"
              },
              "RequireServerNameIndication": "true"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(parameters('aseName'),'_pool')]",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[parameters('aseVirtualIp')]"
                }
              ]
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "[concat(variables('backendFQDN'),'_rule_http')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayRef'), '/httpListeners/', parameters('externalAppHostname'),'_listener_http')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayRef'), '/backendAddressPools/', variables('backendFQDN'),'_pool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayRef'), '/backendHttpSettingsCollection/', variables('backendFQDN'),'_setting_http')]"
              }
            }
          },
          {
            "name": "[concat(variables('backendFQDN'),'_rule_https')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayRef'), '/httpListeners/', parameters('externalAppHostname'),'_listener_https')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayRef'), '/backendAddressPools/', variables('backendFQDN'),'_pool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayRef'), '/backendHttpSettingsCollection/', variables('backendFQDN'),'_setting_https')]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
  }
}
